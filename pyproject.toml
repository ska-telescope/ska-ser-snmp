[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ska-low-itf-devices"
version = "0.2.0"
description = "Python package for LOW ITF equipment tango devices"
authors = ["Malte Marquarding <malte.marquarding@csiro.au>"]
license = "BSD 3-clause new license"
packages = [
    { include = "ska_low_itf_devices", from = "src" },
    { include = "ska_proxr_device", from = "src" },
    { include = "ska_snmp_device", from = "src" },
]

[tool.poetry.dependencies]
python = "~3.10"  # otherwise we don't get ska-tango-base 0.18.1
pytango = "^9.4.2"
PyYAML = "^6.0"
ska-tango-base = "^0.18.1"
ska-ser-devices = "^0.1.1"
pysnmp-lextudio = "^5.0.27"
more-itertools = "^10.1.0"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
isort = "^5.10.1"
flake8 = "^6.0.0"
flake8-docstrings = "^1.7.0"
flake8-pyproject = "^1.2.3"
mypy = "^1.3.0"
pylint = "^2.17.2"
pylint-junit = "^0.3.2"
pytest = "^7.3.1"
pytest-cov = "^4.0.0"
pytest-forked = "^1.4.0"
pytest-json-report = "^1.5.0"
pytest-timeout = "^2.1.0"
toml = "^0.10.2"
pycodestyle = "^2.9.1"
ska-tango-testing = "^0.4.0"
snmpsim-lextudio = "^1.0.1"
types-pyyaml = "^6.0.12.10"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = "^5.2"
PyYAML = "^6.0"
sphinx-rtd-theme = "^1.0"
sphinx-autodoc-typehints = "^1.19"

[[tool.poetry.source]]
name = 'skao'
url = 'https://artefact.skao.int/repository/pypi-internal/simple'
priority = "primary" 

[[tool.poetry.source]]
name = "PyPI"
priority = "primary" 

[tool.pytest.ini_options]
addopts = "-v"
log_cli = true
log_cli_level = "DEBUG"

[tool.flake8]
docstring-style = "sphinx"
rst-directives = "literalinclude"
rst-roles = ["py:attr", "py:class", "py:const", "py:exc", "py:func", "py:meth", "py:mod"]
max-complexity = 10
# E203 and W503 conflict with black
extend-ignore = [
    "E203",  # conflicts with black - whitespace around slice
    "E501",  # line too long. Trust black
    "D100",  # I'll add module docstrings if I want to
    "D101",  # Likewise for classes
    "D200",  # I like one line docstrings not to have to share the line with quotes
    "D202"   # Enforces no blank line after docstring, weird when a fn starts with a comment
]
exclude = "tests/"

[tool.mypy]
mypy_path = "src/:tests/"
show_error_codes = true
strict = true

[[tool.mypy.overrides]]
module = [
    "tango.*",
    "pysmi.*",
    "pyasn1.*",
    "pysnmp.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["tests.*"]
allow_untyped_defs = true

[tool.pylint.messages_control]
disable = [
    "duplicate-code"
]
enable = ["useless-suppression"]

[tool.pylint.similarities]
min-similarity-lines = 7
ignore-imports = "yes"

[tool.pylint.master]
ignore = "tests"
disable = ["C0301", "W0511", "missing-module-docstring", "missing-class-docstring"]

[tool.coverage.run]
